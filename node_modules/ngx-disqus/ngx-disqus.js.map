{"version":3,"file":"ngx-disqus.js","sources":["../tmp/module/disqus.service.ts","../tmp/module/disqus.component.ts","../tmp/module/lib.module.ts","../tmp/ngx-disqus.ts"],"sourcesContent":["import { SHORTNAME } from './lib.module';\nimport { Injectable, Inject } from '@angular/core';\n\ndeclare const global: any;\nexport class DisqusService {\n/**\n * @param {?} shortname\n */\nconstructor(\npublic shortname: string) {\n  }\n/**\n * @return {?}\n */\nget window() {\n    return _window();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [SHORTNAME, ] }, ]},\n];\n}\n\nfunction DisqusService_tsickle_Closure_declarations() {\n/** @type {?} */\nDisqusService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDisqusService.ctorParameters;\n/** @type {?} */\nDisqusService.prototype.shortname;\n}\n\n/**\n * @return {?}\n */\nfunction _window() {\n  return typeof window !== 'undefined' ? window : global;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Component,\n  Input,\n  Output,\n  OnChanges,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  Renderer2,\n  ElementRef,\n  EventEmitter\n} from '@angular/core';\nimport { DisqusService } from './disqus.service';\nimport { DisqusComment, DisqusReady } from './disqus.model';\nexport class DisqusComponent implements OnChanges, OnDestroy {\n/**\n * DISQUS options\n */\nurl: string;\n   identifier: string;\n   title: string;\n   category: string;\n   language: string;\n/**\n * DISQUS events\n */\nonNewComment = new EventEmitter<DisqusComment>();\n   onReady = new EventEmitter<DisqusReady>();\n   onPaginate = new EventEmitter<any>();\n/**\n * @param {?} renderer\n * @param {?} el\n * @param {?} dService\n */\nconstructor(private renderer: Renderer2,\nprivate el: ElementRef,\nprivate dService: DisqusService) { }\n/**\n * @return {?}\n */\nngOnChanges() {\n    /** Reset Disqus if any input changed */\n\n    if (!this.dService.window.DISQUS) {\n      this.addDisqusScript();\n    } else {\n      this.reset();\n    }\n  }\n/**\n * Add DISQUS script\n * @return {?}\n */\naddDisqusScript() {\n\n    /** Set DISQUS config */\n    this.dService.window.disqus_config = this.getConfig();\n\n    const /** @type {?} */ disqusScript = this.renderer.createElement('script');\n    disqusScript.src = `//${this.dService.shortname}.disqus.com/embed.js`;\n    disqusScript.async = true;\n    disqusScript.type = 'text/javascript';\n    this.renderer.setAttribute(disqusScript, 'data-timestamp', new Date().getTime().toString());\n    this.renderer.appendChild(this.el.nativeElement, disqusScript);\n  }\n/**\n * Reset DISQUS with the new config\n * @return {?}\n */\nreset() {\n    this.dService.window.DISQUS.reset({\n      reload: true,\n      config: this.getConfig()\n    });\n  }\n/**\n * Create DISQUS config from inputs\n * @return {?}\n */\ngetConfig() {\n    const /** @type {?} */ self = this;\n    return function () {\n      this.page.identifier = self.identifier;\n      this.page.url = self.validateUrl(self.url);\n      this.page.title = self.title;\n      this.category_id = self.category;\n      this.language = self.language;\n\n      /* Available callbacks are afterRender, onInit, onNewComment, onPaginate, onReady, preData, preInit, preReset */\n      this.callbacks.onNewComment = [(e) => {\n        self.onNewComment.emit(e);\n      }];\n\n      this.callbacks.onReady = [(e) => {\n        self.onReady.emit(e);\n      }];\n\n      this.callbacks.onPaginate = [(e) => {\n        self.onPaginate.emit(e);\n      }];\n    };\n  }\n/**\n * @param {?} url\n * @return {?}\n */\nvalidateUrl(url: string) {\n    /** Validate URL input */\n    if (url) {\n      const /** @type {?} */ r = /(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n\n      if (r.test(url)) {\n        return url;\n      } else {\n        console.warn('[Disqus]: Invalid URL, return undefined');\n      }\n    }\n    /** DISQUS will fallback to \"Window.location.href\" when URL is undefined */\n    return undefined;\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.dService.window.DISQUS = undefined;\n    this.dService.window.disqus_config = undefined;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'disqus',\n  template: '<div id=\"disqus_thread\"></div>',\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: DisqusService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'url': [{ type: Input },],\n'identifier': [{ type: Input },],\n'title': [{ type: Input },],\n'category': [{ type: Input },],\n'language': [{ type: Input },],\n'onNewComment': [{ type: Output },],\n'onReady': [{ type: Output },],\n'onPaginate': [{ type: Output },],\n};\n}\n\nfunction DisqusComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDisqusComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDisqusComponent.ctorParameters;\n/** @type {?} */\nDisqusComponent.propDecorators;\n/**\n * DISQUS options\n * @type {?}\n */\nDisqusComponent.prototype.url;\n/** @type {?} */\nDisqusComponent.prototype.identifier;\n/** @type {?} */\nDisqusComponent.prototype.title;\n/** @type {?} */\nDisqusComponent.prototype.category;\n/** @type {?} */\nDisqusComponent.prototype.language;\n/**\n * DISQUS events\n * @type {?}\n */\nDisqusComponent.prototype.onNewComment;\n/** @type {?} */\nDisqusComponent.prototype.onReady;\n/** @type {?} */\nDisqusComponent.prototype.onPaginate;\n/** @type {?} */\nDisqusComponent.prototype.renderer;\n/** @type {?} */\nDisqusComponent.prototype.el;\n/** @type {?} */\nDisqusComponent.prototype.dService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\nimport { DisqusComponent } from './disqus.component';\nimport { DisqusService } from './disqus.service';\n/**\n * Initialize Disqus with shortname\n * @param {?} shortname\n * @return {?}\n */\nexport function DisqusFactory(shortname: string) {\n  return new DisqusService(shortname);\n}\nexport const /** @type {?} */ SHORTNAME = new InjectionToken<string>('SHORTNAME');\nexport class DisqusModule {\n/**\n * @param {?} shortname\n * @return {?}\n */\nstatic forRoot(shortname: string): ModuleWithProviders {\n    return {\n      ngModule: DisqusModule,\n      providers: [\n        { provide: SHORTNAME, useValue: shortname },\n        {\n          provide: DisqusService,\n          useFactory: DisqusFactory,\n          deps: [SHORTNAME]\n        }\n      ]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [DisqusComponent],\n  exports: [DisqusComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DisqusModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDisqusModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDisqusModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport {DisqusFactory,SHORTNAME,DisqusModule} from './index';\n\nexport {DisqusComponent as ɵb} from './module/disqus.component';\nexport {DisqusService as ɵa} from './module/disqus.service';"],"names":[],"mappings":"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"}